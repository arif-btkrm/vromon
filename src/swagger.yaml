openapi: 3.0.0
info:
  version: '1.0.0'
  title: 'Vromon'
  description: 'Vromon API is a ticket booking system api project, users can search and book ticket according to their destination.'
  contact:
    name: Vromon API
    url: https://vromon.com
    email: support@vromon.com
servers:
  - description: Dev
    url: 'http://localhost:4000/api/v1'
tags:
  - name: Auth
    description: Authentication Endpoints (public)
  - name: Root
    description: Root Endpoints (public)
  - name: Bus
    description: Bus Endpoints (public)
  - name: Ticket
    description: Ticket Endpoints (Private)
  - name: User
    description: User Endpoints (admin only)
paths:
  '/user/signup':
    post:
      description: Signup new user
      tags: [Auth]
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Md. Ariful Islam
                phone:
                  type: string
                  example: 01211100100
                email:
                  type: string
                  format: email
                  example: user@example.com
                password:
                  type: string
                  format: password
                  example: PassWord123
              required: [name, phone, email, password]
      responses:
        '201':
          description: Signup successul
          content:
            'application/json':
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 201
                  message:
                    type: string
                    example: Signup successful
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  '/user/signin':
    post:
      description: Signin to your account
      tags: [Auth]
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: user@test.com
                password:
                  type: string
                  format: password
                  example: 12345
              required: [email, password]
      responses:
        '200':
          description: Signin successul
          content:
            'application/json':
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 200
                  message:
                    type: string
                    example: Signin successful
                  data:
                    type: object
                    properties:
                      access_token:
                        type: string
                        example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  '/bus':
    get:
      description: Get All Available Bus
      tags: [Bus]
      parameters:        
      responses:
        '200':
          description: Object of available Buses
          content:
            'application/json':
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 200
                  message:
                    type: string
                    example: OK
                  data:
                    type: object 
                    result:
                        type: array
                        example: [{}]
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  '/root':
    get:
      description: Get All Available Root
      tags: [Root]
      parameters:        
      responses:
        '200':
          description: Object of available Roots
          content:
            'application/json':
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 200
                  message:
                    type: string
                    example: OK
                  data:
                    type: object 
                    properties:
                        type: object
                        example: [{}]
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'